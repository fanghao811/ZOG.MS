@using System.Globalization
@using Abp.Extensions
@using Abp.Web.Mvc.Extensions
@using Microsoft.Owin.Security
@using ZOGLAB.MMMS.MultiTenancy
@model ZOGLAB.MMMS.Web.Models.Account.LoginFormViewModel
@section Scripts
{
    @Html.IncludeScript("~/Views/Account/Login.js")
}
<div class="row">
    <div class="col-md-7">
        <img src="~/Common/Images/bg-login-on.png"
             style="width:650px;
             height:530px;
             margin-top: 150px;
             margin-left: 180px;"
             alt="登入图片，挂了？" />
    </div>
    <div class="col-md-5 right-login">
        @*<h3 class="form-title">@L("LogIn")</h3>*@
        <img  class="login-img" src="~/Common/Images/zoglab_logo_on_light.png" />
        <h1 style=" margin:18px 54px 50px;
                    font-family:'方正正中黑简体';
                    font-size:36px;
                    font-weight:bolder;
                    color:#ffffff;">@L("SystemName")</h1>

        <div class="alert alert-danger display-hide" style="margin: 0 40px;">
            <button class="close" data-close="alert"></button>
            <span>
                <i class="fa fa-warning"></i> @L("PleaseEnterLoginInformation")
            </span>
        </div>
        @if (!Model.SuccessMessage.IsNullOrEmpty())
        {
            <div class="alert alert-success">
                <button class="close" data-close="alert"></button>
                <span>
                    @Model.SuccessMessage
                </span>
            </div>
        }
        <form class="login-form" action="@Url.Action("Login")?returnUrl=@ViewBag.ReturnUrl" method="post">
            <input type="hidden" name="returnUrlHash" />
            @if (ViewBag.IsMultiTenancyEnabled)
            {
                if (Model.TenancyName.IsNullOrEmpty())
                {
                    <div class="form-group">
                        <!--ie8, ie9 does not support html5 placeholder, so we just show field title for that-->
                        <label class="control-label visible-ie8 visible-ie9">@L("TenancyName")</label>
                        <input class="form-control form-control-solid placeholder-no-fix input-ltr" type="text" placeholder="@L("TenancyName")" name="tenancyName" maxlength="@Tenant.MaxTenancyNameLength" />
                    </div>
                }
                else
                {
                    <input type="hidden" name="tenancyName" value="@Model.TenancyName" />
                }
            }
            <div class="form-group">
                <!--ie8, ie9 does not support html5 placeholder, so we just show field title for that-->
                <label class="control-label visible-ie8 visible-ie9">@L("UserName")</label>
                <input class="form-control form-control-solid placeholder-no-fix input-ltr" type="text" autocomplete="off" placeholder="@L("UserName")" name="usernameOrEmailAddress" value="@(Model.UserNameOrEmailAddress ?? "")" required />
            </div>
            <div class="form-group" style="margin-top:32px">
                <label class="control-label visible-ie8 visible-ie9">@L("Password")</label>
                <input class="form-control form-control-solid placeholder-no-fix input-ltr" type="password" autocomplete="off" placeholder="@L("Password")" name="password" />
            </div>
            <div class="form-actions">
                <button type="submit" class="btn btn-default uppercase"
                        style="width:150px; height:45px; margin-left:40px; margin-top:13px;
                        font-size:18px;
                        font-weight:normal;
                        background:rgba(70,140,249,1);
                        color:rgba(254,254,254,1);">
                    @L("LogIn")
                </button>
                <button type="reset" class="btn btn-success uppercase"
                        style="width:150px; height:45px; margin-left:20px; margin-top:13px;
                        font-size:18px;
                        font-weight:normal;
                        color:rgba(254,254,254,1);">
                    @L("Cancel")
                </button>
                @*<label class="rememberme check">
            <input type="checkbox" name="rememberMe" value="true" /> @L("RememberMe")
        </label>*@
                @*<a href="@Url.Action("ForgotPassword", "Account")" id="forget-password" class="forget-password">@L("ForgotPassword")</a>*@
                @*<a href="" id="forget-password" class="forget-password">@L("ForgotPassword")</a>*@
            </div>
            </form>
        </div>
    </div>
    @{
        var loginProviders = Context.GetOwinContext().Authentication.GetExternalAuthenticationTypes().ToList();
        Func<string, string> getSocialIconClass = (provider) =>
        {
            provider = provider.ToLower(CultureInfo.InvariantCulture);

            if (provider == "google")
            {
                return "googleplus";
            }

            return provider;
        };
    }
    @if (loginProviders.Count > 0)
    {
        <div class="login-options">
            <h4>@L("LoginWith")</h4>
            <ul class="social-icons">
                @using (Html.BeginForm("ExternalLogin", "Account", method: FormMethod.Post))
                {
                    @Html.AntiForgeryToken()

                    <input type="hidden" name="returnUrl" value="@ViewBag.ReturnUrl" />
                    <input type="hidden" name="provider" value="" />

                    foreach (AuthenticationDescription p in loginProviders)
                    {
                        <li>
                            <a class="social-login-icon social-icon-color @getSocialIconClass(p.AuthenticationType)"
                               title="@p.AuthenticationType"
                               data-provider="@p.AuthenticationType"
                               href="javascript:;"></a>
                        </li>
                    }
                }
            </ul>
        </div>
    }

    @*<div class="create-account">
            <p>
                @if (Model.IsSelfRegistrationEnabled)
                {
                    <a href="@Url.Action("Register", "Account")" id="register-btn" class="uppercase">@L("CreateAnAccount")</a>
                    <span class="pipe-divider"> | </span>
                }
                <a href="@Url.Action("EmailActivation", "Account")" id="email-activation-btn" class="uppercase">@L("EmailActivation")</a>
            </p>
        </div>*@